chans {
    chan1 : gain smooth 0.9 db 0(a0) 
            pan 0.5(pan0)
            send testchain2 gain db 1,
            
    chan2 : gain db -10(a1)
            pan 0.5(a0),
            
    ret   : return testchain2
            gain db -10(a0)
            pan 0.5(a0)
            
}

ctrl {
    gain0 : "/gains:0" in 0:1024,
    gain1 : "/gains:1" in 0:1024,
       
    pan0 : "/pans:0" in 0:1024,
    pan1 : "/pans:1" in 0:1024,
    
a0 : "/a0" in 0:1024,
a1 : "/a1" in 0:1024,
a2 : "/a2" in 0:1024,
a3 : "/a3" in 0:1024,
a4 : "/a4" in 0:1024,
a5 : "/a5" in 0:1024,
a6 : "/a6" in 0:1024,
a7 : "/a7" in 0:1024,
a8 : "/a8" in 0:1024,
a9 : "/a9" in 0:1024,
a10 : "/a10" in 0:1024,
a11 : "/a11" in 0:1024,
a12 : "/a12" in 0:1024,
a13 : "/a13" in 0:1024,
a14 : "/a14" in 0:1024,
a15 : "/a15" in 0:1024,
a16 : "/a16" in 0:1024,
a17 : "/a17" in 0:1024,
a18 : "/a18" in 0:1024,
a19 : "/a19" in 0:1024,
a20 : "/a20" in 0:1024,
a21 : "/a21" in 0:1024,
a22 : "/a22" in 0:1024,
a23 : "/a23" in 0:1024,
a24 : "/a24" in 0:1024,
a25 : "/a25" in 0:1024,
a26 : "/a26" in 0:1024,
a27 : "/a27" in 0:1024,
a28 : "/a28" in 0:1024,
a29 : "/a29" in 0:1024,
a30 : "/a30" in 0:1024,
a31 : "/a31" in 0:1024,
a32 : "/a32" in 0:1024,
a33 : "/a33" in 0:1024,
a34 : "/a34" in 0:1024,
a35 : "/a35" in 0:1024,
a36 : "/a36" in 0:1024,
a37 : "/a37" in 0:1024,
a38 : "/a38" in 0:1024,
a39 : "/a39" in 0:1024,
a40 : "/a40" in 0:1024,
a41 : "/a41" in 0:1024,
a42 : "/a42" in 0:1024,
a43 : "/a43" in 0:1024,
a44 : "/a44" in 0:1024,
a45 : "/a45" in 0:1024,
a46 : "/a46" in 0:1024,
a47 : "/a47" in 0:1024,
a48 : "/a48" in 0:1024,
a49 : "/a49" in 0:1024,
a50 : "/a50" in 0:1024,
a51 : "/a51" in 0:1024,
a52 : "/a52" in 0:1024,
a53 : "/a53" in 0:1024,
a54 : "/a54" in 0:1024,
a55 : "/a55" in 0:1024,
a56 : "/a56" in 0:1024,
a57 : "/a57" in 0:1024,
a58 : "/a58" in 0:1024,
a59 : "/a59" in 0:1024,
a60 : "/a60" in 0:1024,
a61 : "/a61" in 0:1024,
a62 : "/a62" in 0:1024,
a63 : "/a63" in 0:1024,
a64 : "/a64" in 0:1024,
a65 : "/a65" in 0:1024,
a66 : "/a66" in 0:1024,
a67 : "/a67" in 0:1024,
a68 : "/a68" in 0:1024,
a69 : "/a69" in 0:1024,
a70 : "/a70" in 0:1024,
a71 : "/a71" in 0:1024,
a72 : "/a72" in 0:1024,
a73 : "/a73" in 0:1024,
a74 : "/a74" in 0:1024,
a75 : "/a75" in 0:1024,
a76 : "/a76" in 0:1024,
a77 : "/a77" in 0:1024,
a78 : "/a78" in 0:1024,
a79 : "/a79" in 0:1024,
a80 : "/a80" in 0:1024,
a81 : "/a81" in 0:1024,
a82 : "/a82" in 0:1024,
a83 : "/a83" in 0:1024,
a84 : "/a84" in 0:1024,
a85 : "/a85" in 0:1024,
a86 : "/a86" in 0:1024,
a87 : "/a87" in 0:1024,
a88 : "/a88" in 0:1024,
a89 : "/a89" in 0:1024,
a90 : "/a90" in 0:1024,
a91 : "/a91" in 0:1024,
a92 : "/a92" in 0:1024,
a93 : "/a93" in 0:1024,
a94 : "/a94" in 0:1024,
a95 : "/a95" in 0:1024,
a96 : "/a96" in 0:1024,
a97 : "/a97" in 0:1024,
a98 : "/a98" in 0:1024,
a99 : "/a99" in 0:1024
}

plugins {
    # just specifies short names for ports
    gverb {
        names {
            roomsize "Roomsize (m)",
            outl "Left output",
            outr "Right output",
            input "Input"
        }
    }
}
    

chain {
    # an effect chain

    testchain1 {

        # where the two outputs are: ports within effects

        out gverb1:outl, gverb2:outr

        # the list of effects

        fx {

            # LADSPA effect label and name of effect in this chain

            gverb gverb1

            # where the inputs for this effect come from: either
            # LEFT, RIGHT or outputs of other effects. 

            in {
                # my "input" port comes from LEFT.
                input from LEFT # others would be after commas.
            }
            # parameters

            params {
                roomsize default
            },
            
            gverb gverb2
            in { input from RIGHT }
            params { roomsize default }
        }
    },
    
    testchain2 {
        out mixl:output,mixr:output
        fx{
            gverb gverbl
            in {  input from LEFT  }
            params {  roomsize default },

            gverb gverbr
            in {  input from RIGHT  }
            params {  roomsize default },
            
            Mix mixl in { in1 from gverbl:"Left output", in2 from gverbr:"Left output" }
            params {},
            
            Mix mixr in { in1 from gverbl:"Right output", in2 from gverbr:"Right output" }
            params {}
        }
    }      
                
                
}
